// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_project_horse_races_db.EntityFramework;

namespace Web_project_horse_races_db.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220526074513_ReworkUsersRelationships")]
    partial class ReworkUsersRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web_project_horse_races_db.Model.BaseUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("UserId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BanState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("UserEmail");

                    b.Property<decimal>("MoneyBalance")
                        .HasColumnType("money")
                        .HasColumnName("UserMoneyBalance");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("UserName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("UserPassword");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.ToTable("BaseUsers");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookmakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("BookmakerId");

                    b.Property<double>("Coefficient")
                        .HasColumnType("float")
                        .HasColumnName("Coefficient");

                    b.Property<int>("RaceParticipantBetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("RaceParticipantBetId");

                    b.HasKey("Id");

                    b.HasIndex("BookmakerId");

                    b.HasIndex("RaceParticipantBetId");

                    b.ToTable("BookmakerBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Horse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("HorseId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Age")
                        .HasColumnType("TINYINT")
                        .HasColumnName("HorseAge");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("HorseName");

                    b.HasKey("Id");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("RaceId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RaceDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("RaceDate");

                    b.Property<int>("RaceStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceBetType", b =>
                {
                    b.Property<int>("RaceBetTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("RaceBetTypeId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RaceBetTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("RaceBetTypeName");

                    b.HasKey("RaceBetTypeId");

                    b.HasAlternateKey("RaceBetTypeName");

                    b.ToTable("RaceBetType");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HorseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("HorseId");

                    b.Property<byte>("Number")
                        .HasColumnType("TINYINT")
                        .HasColumnName("RaceParticipantNumber");

                    b.Property<byte>("Position")
                        .HasColumnType("TINYINT")
                        .HasColumnName("RaceParticipantPosition");

                    b.Property<int>("RaceId")
                        .HasColumnType("INT")
                        .HasColumnName("RaceId");

                    b.HasKey("Id");

                    b.HasIndex("HorseId");

                    b.HasIndex("RaceId");

                    b.ToTable("RaceParticipants");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipantBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("RaceParticipantBetId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RaceBetTypeId")
                        .HasColumnType("INT")
                        .HasColumnName("RaceBetType");

                    b.Property<int>("RaceParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("RaceParticipantId");

                    b.HasKey("Id");

                    b.HasIndex("RaceBetTypeId");

                    b.HasIndex("RaceParticipantId");

                    b.ToTable("RaceParticipantsBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BetStatus")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("BetStatus");

                    b.Property<decimal>("BetSum")
                        .HasColumnType("money")
                        .HasColumnName("UserBetSum");

                    b.Property<int>("BookmakerBetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("BookmakerBetId");

                    b.Property<decimal>("PossibleWinSum")
                        .HasColumnType("money")
                        .HasColumnName("UserBetPossibleWin");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BookmakerBetId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Bookmaker", b =>
                {
                    b.HasBaseType("Web_project_horse_races_db.Model.BaseUser");

                    b.ToTable("Bookmakers");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.User", b =>
                {
                    b.HasBaseType("Web_project_horse_races_db.Model.BaseUser");

                    b.Property<int>("BetCount")
                        .HasColumnType("INT")
                        .HasColumnName("UserBetCount");

                    b.Property<int>("LooseBets")
                        .HasColumnType("INT")
                        .HasColumnName("UserLooseBetCount");

                    b.Property<int>("WinBets")
                        .HasColumnType("INT")
                        .HasColumnName("UserWinBetCount");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerBet", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.Bookmaker", "Bookmaker")
                        .WithMany("BookmakerBets")
                        .HasForeignKey("BookmakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.RaceParticipantBet", "RaceParticipantBet")
                        .WithMany("BookmakerBets")
                        .HasForeignKey("RaceParticipantBetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bookmaker");

                    b.Navigation("RaceParticipantBet");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipant", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.Horse", "Horse")
                        .WithMany("RaceParticipants")
                        .HasForeignKey("HorseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.Race", "Race")
                        .WithMany("RaceParticipants")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horse");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipantBet", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.RaceBetType", "RaceBetType")
                        .WithMany("RaceParticipantBets")
                        .HasForeignKey("RaceBetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.RaceParticipant", "RaceParticipant")
                        .WithMany("RaceParticipantBets")
                        .HasForeignKey("RaceParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RaceBetType");

                    b.Navigation("RaceParticipant");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserBet", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.BookmakerBet", "BookmakerBet")
                        .WithMany("UserBets")
                        .HasForeignKey("BookmakerBetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.User", "User")
                        .WithMany("UserBets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookmakerBet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Bookmaker", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("Web_project_horse_races_db.Model.Bookmaker", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.User", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("Web_project_horse_races_db.Model.User", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerBet", b =>
                {
                    b.Navigation("UserBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Horse", b =>
                {
                    b.Navigation("RaceParticipants");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Race", b =>
                {
                    b.Navigation("RaceParticipants");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceBetType", b =>
                {
                    b.Navigation("RaceParticipantBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipant", b =>
                {
                    b.Navigation("RaceParticipantBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipantBet", b =>
                {
                    b.Navigation("BookmakerBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Bookmaker", b =>
                {
                    b.Navigation("BookmakerBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.User", b =>
                {
                    b.Navigation("UserBets");
                });
#pragma warning restore 612, 618
        }
    }
}
