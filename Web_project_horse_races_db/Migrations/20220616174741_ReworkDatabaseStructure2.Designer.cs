// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_project_horse_races_db.EntityFramework;

namespace Web_project_horse_races_db.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220616174741_ReworkDatabaseStructure2")]
    partial class ReworkDatabaseStructure2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web_project_horse_races_db.Model.Bookmaker", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Name");

                    b.Property<decimal>("MoneyBalance")
                        .HasColumnType("money")
                        .HasColumnName("MoneyBalance");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("Password");

                    b.HasKey("Name");

                    b.ToTable("Bookmakers");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookmakerRaceBetId")
                        .HasColumnType("INT");

                    b.Property<double>("Coefficient")
                        .HasColumnType("float")
                        .HasColumnName("Coefficient");

                    b.Property<int>("RaceParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("RaceParticipantId");

                    b.HasKey("Id");

                    b.HasIndex("BookmakerRaceBetId");

                    b.HasIndex("RaceParticipantId");

                    b.ToTable("BookmakerBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerRaceBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookmakerName")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("RaceId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("BookmakerName");

                    b.HasIndex("RaceId");

                    b.ToTable("BookmakerRaceBet");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Horse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("HorseId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Age")
                        .HasColumnType("TINYINT")
                        .HasColumnName("HorseAge");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("HorseName");

                    b.HasKey("Id");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("RaceId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RaceDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("RaceDate");

                    b.Property<string>("RaceStatus")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("RaceStatus");

                    b.HasKey("Id");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HorseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("HorseId");

                    b.Property<byte>("Number")
                        .HasColumnType("TINYINT")
                        .HasColumnName("RaceParticipantNumber");

                    b.Property<byte>("Position")
                        .HasColumnType("TINYINT")
                        .HasColumnName("RaceParticipantPosition");

                    b.Property<int>("RaceId")
                        .HasColumnType("INT")
                        .HasColumnName("RaceId");

                    b.HasKey("Id");

                    b.HasIndex("HorseId");

                    b.HasIndex("RaceId");

                    b.ToTable("RaceParticipants");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BanState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Email");

                    b.Property<decimal>("MoneyBalance")
                        .HasColumnType("money")
                        .HasColumnName("MoneyBalance");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("Password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BetStatus")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("BetStatus");

                    b.Property<decimal>("BetSum")
                        .HasColumnType("money")
                        .HasColumnName("BetSum");

                    b.Property<int?>("BookmakerBetId")
                        .HasColumnType("INT");

                    b.Property<int>("BookmakerRaceBetId")
                        .HasColumnType("INT");

                    b.Property<double>("Coefficient")
                        .HasColumnType("float")
                        .HasColumnName("Coefficient");

                    b.Property<decimal>("PossibleWinSum")
                        .HasColumnType("money")
                        .HasColumnName("PossibleWin");

                    b.Property<int>("UserBetTypeId")
                        .HasColumnType("INT");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BookmakerBetId");

                    b.HasIndex("BookmakerRaceBetId");

                    b.HasIndex("UserBetTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserBetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("UserBetType");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerBet", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.BookmakerRaceBet", "BookmakerRaceBet")
                        .WithMany("BookmakerBets")
                        .HasForeignKey("BookmakerRaceBetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.RaceParticipant", "RaceParticipant")
                        .WithMany("BookmakerBets")
                        .HasForeignKey("RaceParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookmakerRaceBet");

                    b.Navigation("RaceParticipant");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerRaceBet", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.Bookmaker", "Bookmaker")
                        .WithMany("BookmakerRaceBets")
                        .HasForeignKey("BookmakerName")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Web_project_horse_races_db.Model.Race", "Race")
                        .WithMany("BookmakerRaceBets")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bookmaker");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipant", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.Horse", "Horse")
                        .WithMany("RaceParticipants")
                        .HasForeignKey("HorseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.Race", "Race")
                        .WithMany("RaceParticipants")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horse");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.User", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserBet", b =>
                {
                    b.HasOne("Web_project_horse_races_db.Model.BookmakerBet", null)
                        .WithMany("UserBets")
                        .HasForeignKey("BookmakerBetId");

                    b.HasOne("Web_project_horse_races_db.Model.BookmakerRaceBet", "BookmakerRaceBet")
                        .WithMany("UserBets")
                        .HasForeignKey("BookmakerRaceBetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.UserBetType", "UserBetType")
                        .WithMany("UserBets")
                        .HasForeignKey("UserBetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_project_horse_races_db.Model.User", "User")
                        .WithMany("UserBets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookmakerRaceBet");

                    b.Navigation("User");

                    b.Navigation("UserBetType");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Bookmaker", b =>
                {
                    b.Navigation("BookmakerRaceBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerBet", b =>
                {
                    b.Navigation("UserBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.BookmakerRaceBet", b =>
                {
                    b.Navigation("BookmakerBets");

                    b.Navigation("UserBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Horse", b =>
                {
                    b.Navigation("RaceParticipants");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.Race", b =>
                {
                    b.Navigation("BookmakerRaceBets");

                    b.Navigation("RaceParticipants");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.RaceParticipant", b =>
                {
                    b.Navigation("BookmakerBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.User", b =>
                {
                    b.Navigation("UserBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserBetType", b =>
                {
                    b.Navigation("UserBets");
                });

            modelBuilder.Entity("Web_project_horse_races_db.Model.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
